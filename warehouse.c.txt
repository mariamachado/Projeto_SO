#include <semaphore.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>
#include <sys/shm.h>
#include <stdio.h>

#define P_SIZE 10

typedef struct
{
	int quant;
	int produtos[P_SIZE];
} atualiza;

atualiza *prod;
/*int* shared_variable;
int shmid;
sem_t mutex;*/

int main(){
	int i, n_ware;
	for (i=0; i<P_SIZE; i++){		
}
	//int *W_NO;
	printf ("Numero de armazéns: ");
	scanf ("%d", &n_ware);
	//create processes
	for (i=1; i<=n_ware; i++){
		if (fork()==0){
			printf ("\nWarehouse [%d]->\tID:[%d] ", i, getpid());
			//getpid()=&W_NO;
			exit(0);
		}
	//printf ("\n");
	}
	printf("\n\n");
	for (i=0; i<n_ware; i++){
		wait(NULL);
	}
	return 0;
}